@model TaskManagement.Models.MstrUserStory

@{
    ViewBag.Title = "User Story List";
    Layout = "../Shared/_Layout3.cshtml";


}
@using (Html.BeginForm("UserStory", "TeamLeadLanding", FormMethod.Post))
{
    <div class="form-group d-flex align-items-end">
        <div class="w-75 me-5">
            <label asp-for="Project" class="control-label"></label>
            <select id="myList" asp-for="ProjectId" class="form-control">
                <option value="">Select</option>
                @foreach (var item in @ViewBag.TProjects)
                {
                    <option value="@item.ProjectId">@item.ProjectTitle</option>
                }
            </select>
        </div>
        <button class="submit GetBtn w-25" data-id="${rowObject.userStoryId}">Submit</button>

    </div>

    <br>
    <br>
}
<div class="w-100 d-flex justify-content-end mb-3">
    <button id="addUserStoryBtn" class="submit" style="width: 15%">Add User Story</button>

</div>


<table id="jqGrid"></table>
<div id="jqGridPager"></div>

<link href="~/css/theme/jquery-ui.min.css" rel="stylesheet" />
<link href="~/css/ui.jqgrid.css" rel="stylesheet" />

@section scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://code.jquery.com/jquery-migrate-1.4.1.min.js"></script>
    <script src="~/js/jqgrid/grid.locale-en.js"></script>
    <script src="~/js/jqgrid/jquery.jqgrid.min.js"></script>
    <script src="~/js/jqgrid/jquery-ui.min.js"></script>
    <script>
        $(function () {
            // Prepare data for jqGrid
            const gridData = @Html.Raw(Json.Serialize(ViewBag.UserStories));

            // Initialize jqGrid
            $("#jqGrid").jqGrid({
                datatype: "local", // Use local data
                data: gridData, // Bind gridData to the jqGrid

                colModel: [
                    { label: "UserStoryId", name: "userStoryId", key: true, hidden: true },
                    { label: "Description", name: "description", width: 200, sortable: false},
                    { label: "Points", name: "points", width: 80, sortable: false },
                    { label: "Project", name: "projectTitle", width: 200 },
                    { label: "Owner", name: "ownerName", width: 150 },
                    { label: "Last Modified By", name: "lastModifiedByName", width: 150, sortable: false },
                    { label: "Last Modified On", name: "lastModifiedOn", width: 150, formatter: "date", sortable: false },
                    { label: "Is Notes Attached", name: "isNotesAttached", width: 150 },
                    {
                        label: "Actions",
                        name: "actions",
                        width: 300,
                        sortable: false,
                        formatter: function (cellvalue, options, rowObject) {
                            const infoIcon = '@Url.Content("~/feather-info.svg")';
                            const editIcon = '@Url.Content("~/feather-edit.svg")';
                            return `
                                                <button class="action-btn editBtn" data-id="${rowObject.userStoryId}">
                                                         <img src="${editIcon}" alt="Edit Icon" />
                                                </button>
                                                <button class="action-btn detailsBtn" data-id="${rowObject.userStoryId}">
                                                <img src="${infoIcon}" alt="Details Icon" />
                                                </button>
                                    `;
                        },
                        align: 'center'
                    }
                ],
                pager: "#jqGridPager",
                rowNum: 10,
                rowList: [10, 20, 30],
                sortname: "description",
                sortorder: "asc",
                viewrecords: true,
                height: 'auto',
                jsonReader: {
                    repeatitems: false,
                    id: "userStoryId"
                }
            });

            // Add button click event
            $('#addUserStoryBtn').on('click', function () {
                window.location.href = '/TeamLeadLanding/Create';
            });

            // Handle Edit and Delete buttons
            $(document).on('click', '.editBtn', function () {
                const userStoryId = $(this).data('id');
                window.location.href = `/TeamLeadLanding/Edit/${userStoryId}`;
            });
            $(document).on('click', '.detailsBtn', function () {
                const userStoryId = $(this).data('id');
                window.location.href = `/TeamLeadLanding/Details/${userStoryId}`;
            });

            // $(document).on('click', '.deleteBtn', function () {
            //     const userStoryId = $(this).data('id');
            //     if (confirm("Are you sure you want to delete this user story?")) {
            //         window.location.href = `/UserStory/Delete/${userStoryId}`;
            //     }
            // });

            // Enable jqGrid navigation
            $("#jqGrid").jqGrid('navGrid', '#jqGridPager',
                { edit: false, add: false, del: false, search: true, refresh: true });
        });
    </script>
}